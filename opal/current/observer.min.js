Opal.modules.observer=function(Opal){Opal.top;var $nesting=[],nil=Opal.nil,$module=(Opal.breaker,Opal.slice,Opal.module),$truthy=Opal.truthy,$hash2=Opal.hash2,$send=Opal.send;return Opal.add_stubs(["$respond_to?","$raise","$new","$to_s","$[]=","$-","$delete","$clear","$size","$each","$send"]),function($base,$parent_nesting){var TMP_Observable_add_observer_1,TMP_Observable_delete_observer_2,TMP_Observable_delete_observers_3,TMP_Observable_count_observers_4,TMP_Observable_changed_5,TMP_Observable_changed$q_6,TMP_Observable_notify_observers_8,self=$module($base,"Observable"),$nesting=(self.$$proto,[self].concat($parent_nesting));Opal.defn(self,"$add_observer",TMP_Observable_add_observer_1=function(observer,func){var $a,$writer,lhs,rhs;return null==this.observer_peers&&(this.observer_peers=nil),null==func&&(func="update"),$truthy(null!=($a=this.observer_peers)&&$a!==nil?"instance-variable":nil)||(this.observer_peers=$hash2([],{})),$truthy(observer["$respond_to?"](func))||this.$raise(Opal.const_get_relative($nesting,"NoMethodError").$new("observer does not respond to `"+func.$to_s()+"'",func.$to_s())),$writer=[observer,func],$send(this.observer_peers,"[]=",Opal.to_a($writer)),$writer[(lhs=$writer.length,rhs=1,"number"==typeof lhs&&"number"==typeof rhs?lhs-rhs:lhs["$-"](rhs))]},TMP_Observable_add_observer_1.$$arity=-2),Opal.defn(self,"$delete_observer",TMP_Observable_delete_observer_2=function(observer){var $a;return null==this.observer_peers&&(this.observer_peers=nil),$truthy(null!=($a=this.observer_peers)&&$a!==nil?"instance-variable":nil)?this.observer_peers.$delete(observer):nil},TMP_Observable_delete_observer_2.$$arity=1),Opal.defn(self,"$delete_observers",TMP_Observable_delete_observers_3=function(){var $a;return null==this.observer_peers&&(this.observer_peers=nil),$truthy(null!=($a=this.observer_peers)&&$a!==nil?"instance-variable":nil)?this.observer_peers.$clear():nil},TMP_Observable_delete_observers_3.$$arity=0),Opal.defn(self,"$count_observers",TMP_Observable_count_observers_4=function(){var $a;return null==this.observer_peers&&(this.observer_peers=nil),$truthy(null!=($a=this.observer_peers)&&$a!==nil?"instance-variable":nil)?this.observer_peers.$size():0},TMP_Observable_count_observers_4.$$arity=0),Opal.defn(self,"$changed",TMP_Observable_changed_5=function(state){return null==state&&(state=!0),this.observer_state=state},TMP_Observable_changed_5.$$arity=-1),Opal.defn(self,"$changed?",TMP_Observable_changed$q_6=function(){var $a,$b;return null==this.observer_state&&(this.observer_state=nil),!!$truthy($truthy(($b=this.observer_state,$a=null!=$b&&$b!==nil?"instance-variable":nil))?this.observer_state:$a)},TMP_Observable_changed$q_6.$$arity=0),Opal.defn(self,"$notify_observers",TMP_Observable_notify_observers_8=function($a_rest){var $b,$c,TMP_7,arg;null==this.observer_state&&(this.observer_state=nil),null==this.observer_peers&&(this.observer_peers=nil);var $args_len=arguments.length,$rest_len=$args_len-0;$rest_len<0&&($rest_len=0),arg=new Array($rest_len);for(var $arg_idx=0;$arg_idx<$args_len;$arg_idx++)arg[$arg_idx-0]=arguments[$arg_idx];return $truthy($truthy($b=null!=($c=this.observer_state)&&$c!==nil?"instance-variable":nil)?this.observer_state:$b)?($truthy(null!=($b=this.observer_peers)&&$b!==nil?"instance-variable":nil)&&$send(this.observer_peers,"each",[],((TMP_7=function(k,v){TMP_7.$$s;return null==k&&(k=nil),null==v&&(v=nil),$send(k,"send",[v].concat(Opal.to_a(arg)))}).$$s=this,TMP_7.$$arity=2,TMP_7)),this.observer_state=!1):nil},TMP_Observable_notify_observers_8.$$arity=-1)}($nesting[0],$nesting)};
