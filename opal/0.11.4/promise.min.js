Opal.modules.promise=function(Opal){function $rb_plus(lhs,rhs){return"number"==typeof lhs&&"number"==typeof rhs?lhs+rhs:lhs["$+"](rhs)}Opal.top;var $nesting=[],nil=Opal.nil,$klass=(Opal.breaker,Opal.slice,Opal.klass),$hash2=Opal.hash2,$truthy=Opal.truthy,$send=Opal.send;return Opal.add_stubs(["$resolve","$new","$reject","$attr_reader","$===","$value","$has_key?","$keys","$!","$==","$<<","$>>","$exception?","$[]","$resolved?","$rejected?","$error","$include?","$action","$realized?","$raise","$^","$call","$resolve!","$exception!","$any?","$each","$reject!","$there_can_be_only_one!","$then","$to_proc","$fail","$always","$trace","$class","$object_id","$+","$inspect","$act?","$nil?","$prev","$push","$concat","$it","$proc","$reverse","$pop","$<=","$length","$shift","$-","$wait","$map","$reduce","$try","$tap","$all?","$find"]),function($base,$super,$parent_nesting){function $Promise(){}var TMP_Promise_value_1,TMP_Promise_error_2,TMP_Promise_when_3,TMP_Promise_initialize_4,TMP_Promise_value_5,TMP_Promise_act$q_6,TMP_Promise_action_7,TMP_Promise_exception$q_8,TMP_Promise_realized$q_9,TMP_Promise_resolved$q_10,TMP_Promise_rejected$q_11,TMP_Promise_$_12,TMP_Promise_$lt$lt_13,TMP_Promise_$gt$gt_14,TMP_Promise_resolve_15,TMP_Promise_resolve$B_17,TMP_Promise_reject_18,TMP_Promise_reject$B_20,TMP_Promise_exception$B_21,TMP_Promise_then_22,TMP_Promise_then$B_23,TMP_Promise_fail_24,TMP_Promise_fail$B_25,TMP_Promise_always_26,TMP_Promise_always$B_27,TMP_Promise_trace_28,TMP_Promise_trace$B_29,TMP_Promise_there_can_be_only_one$B_30,TMP_Promise_inspect_31,self=$Promise=$klass($base,null,"Promise",$Promise),def=self.$$proto,$nesting=[self].concat($parent_nesting);return def.value=def.action=def.exception=def.realized=def.next=def.delayed=def.error=def.prev=nil,Opal.defs(self,"$value",TMP_Promise_value_1=function(value){return this.$new().$resolve(value)},TMP_Promise_value_1.$$arity=1),Opal.defs(self,"$error",TMP_Promise_error_2=function(value){return this.$new().$reject(value)},TMP_Promise_error_2.$$arity=1),Opal.defs(self,"$when",TMP_Promise_when_3=function($a_rest){var promises,$args_len=arguments.length,$rest_len=$args_len-0;$rest_len<0&&($rest_len=0),promises=new Array($rest_len);for(var $arg_idx=0;$arg_idx<$args_len;$arg_idx++)promises[$arg_idx-0]=arguments[$arg_idx];return Opal.const_get_relative($nesting,"When").$new(promises)},TMP_Promise_when_3.$$arity=-1),self.$attr_reader("error","prev","next"),Opal.defn(self,"$initialize",TMP_Promise_initialize_4=function(action){return null==action&&(action=$hash2([],{})),this.action=action,this.realized=!1,this.exception=!1,this.value=nil,this.error=nil,this.delayed=!1,this.prev=nil,this.next=[]},TMP_Promise_initialize_4.$$arity=-1),Opal.defn(self,"$value",TMP_Promise_value_5=function(){return $truthy(Opal.const_get_relative($nesting,"Promise")["$==="](this.value))?this.value.$value():this.value},TMP_Promise_value_5.$$arity=0),Opal.defn(self,"$act?",TMP_Promise_act$q_6=function(){var $a;return $truthy($a=this.action["$has_key?"]("success"))?$a:this.action["$has_key?"]("always")},TMP_Promise_act$q_6.$$arity=0),Opal.defn(self,"$action",TMP_Promise_action_7=function(){return this.action.$keys()},TMP_Promise_action_7.$$arity=0),Opal.defn(self,"$exception?",TMP_Promise_exception$q_8=function(){return this.exception},TMP_Promise_exception$q_8.$$arity=0),Opal.defn(self,"$realized?",TMP_Promise_realized$q_9=function(){return this.realized["$!"]()["$!"]()},TMP_Promise_realized$q_9.$$arity=0),Opal.defn(self,"$resolved?",TMP_Promise_resolved$q_10=function(){return this.realized["$=="]("resolve")},TMP_Promise_resolved$q_10.$$arity=0),Opal.defn(self,"$rejected?",TMP_Promise_rejected$q_11=function(){return this.realized["$=="]("reject")},TMP_Promise_rejected$q_11.$$arity=0),Opal.defn(self,"$^",TMP_Promise_$_12=function(promise){return promise["$<<"](this),this["$>>"](promise),promise},TMP_Promise_$_12.$$arity=1),Opal.defn(self,"$<<",TMP_Promise_$lt$lt_13=function(promise){return this.prev=promise,this},TMP_Promise_$lt$lt_13.$$arity=1),Opal.defn(self,"$>>",TMP_Promise_$gt$gt_14=function(promise){var $a,self=this;return self.next["$<<"](promise),$truthy(self["$exception?"]())?promise.$reject(self.delayed["$[]"](0)):$truthy(self["$resolved?"]())?promise.$resolve($truthy(self.delayed)?self.delayed["$[]"](0):self.$value()):$truthy(self["$rejected?"]())&&($truthy($truthy($a=self.action["$has_key?"]("failure")["$!"]())?$a:Opal.const_get_relative($nesting,"Promise")["$==="]($truthy(self.delayed)?self.delayed["$[]"](0):self.error))?promise.$reject($truthy(self.delayed)?self.delayed["$[]"](0):self.$error()):$truthy(promise.$action()["$include?"]("always"))&&promise.$reject($truthy(self.delayed)?self.delayed["$[]"](0):self.$error())),self},TMP_Promise_$gt$gt_14.$$arity=1),Opal.defn(self,"$resolve",TMP_Promise_resolve_15=function(value){var $a,block=nil,e=nil;if(null==value&&(value=nil),$truthy(this["$realized?"]())&&this.$raise(Opal.const_get_relative($nesting,"ArgumentError"),"the promise has already been realized"),$truthy(Opal.const_get_relative($nesting,"Promise")["$==="](value)))return value["$<<"](this.prev)["$^"](this);try{$truthy(block=$truthy($a=this.action["$[]"]("success"))?$a:this.action["$[]"]("always"))&&(value=block.$call(value)),this["$resolve!"](value)}catch($err){if(!Opal.rescue($err,[Opal.const_get_relative($nesting,"Exception")]))throw $err;e=$err;try{this["$exception!"](e)}finally{Opal.pop_exception()}}return this},TMP_Promise_resolve_15.$$arity=-1),Opal.defn(self,"$resolve!",TMP_Promise_resolve$B_17=function(value){var TMP_16;return this.realized="resolve",this.value=value,$truthy(this.next["$any?"]())?$send(this.next,"each",[],((TMP_16=function(p){TMP_16.$$s;return null==p&&(p=nil),p.$resolve(value)}).$$s=this,TMP_16.$$arity=1,TMP_16)):this.delayed=[value]},TMP_Promise_resolve$B_17.$$arity=1),Opal.defn(self,"$reject",TMP_Promise_reject_18=function(value){var $a,block=nil,e=nil;if(null==value&&(value=nil),$truthy(this["$realized?"]())&&this.$raise(Opal.const_get_relative($nesting,"ArgumentError"),"the promise has already been realized"),$truthy(Opal.const_get_relative($nesting,"Promise")["$==="](value)))return value["$<<"](this.prev)["$^"](this);try{$truthy(block=$truthy($a=this.action["$[]"]("failure"))?$a:this.action["$[]"]("always"))&&(value=block.$call(value)),$truthy(this.action["$has_key?"]("always"))?this["$resolve!"](value):this["$reject!"](value)}catch($err){if(!Opal.rescue($err,[Opal.const_get_relative($nesting,"Exception")]))throw $err;e=$err;try{this["$exception!"](e)}finally{Opal.pop_exception()}}return this},TMP_Promise_reject_18.$$arity=-1),Opal.defn(self,"$reject!",TMP_Promise_reject$B_20=function(value){var TMP_19;return this.realized="reject",this.error=value,$truthy(this.next["$any?"]())?$send(this.next,"each",[],((TMP_19=function(p){TMP_19.$$s;return null==p&&(p=nil),p.$reject(value)}).$$s=this,TMP_19.$$arity=1,TMP_19)):this.delayed=[value]},TMP_Promise_reject$B_20.$$arity=1),Opal.defn(self,"$exception!",TMP_Promise_exception$B_21=function(error){return this.exception=!0,this["$reject!"](error)},TMP_Promise_exception$B_21.$$arity=1),Opal.defn(self,"$then",TMP_Promise_then_22=function(){var $iter=TMP_Promise_then_22.$$p,block=$iter||nil;return $iter&&(TMP_Promise_then_22.$$p=null),this["$^"](Opal.const_get_relative($nesting,"Promise").$new($hash2(["success"],{success:block})))},TMP_Promise_then_22.$$arity=0),Opal.defn(self,"$then!",TMP_Promise_then$B_23=function(){var $iter=TMP_Promise_then$B_23.$$p,block=$iter||nil;return $iter&&(TMP_Promise_then$B_23.$$p=null),this["$there_can_be_only_one!"](),$send(this,"then",[],block.$to_proc())},TMP_Promise_then$B_23.$$arity=0),Opal.alias(self,"do","then"),Opal.alias(self,"do!","then!"),Opal.defn(self,"$fail",TMP_Promise_fail_24=function(){var $iter=TMP_Promise_fail_24.$$p,block=$iter||nil;return $iter&&(TMP_Promise_fail_24.$$p=null),this["$^"](Opal.const_get_relative($nesting,"Promise").$new($hash2(["failure"],{failure:block})))},TMP_Promise_fail_24.$$arity=0),Opal.defn(self,"$fail!",TMP_Promise_fail$B_25=function(){var $iter=TMP_Promise_fail$B_25.$$p,block=$iter||nil;return $iter&&(TMP_Promise_fail$B_25.$$p=null),this["$there_can_be_only_one!"](),$send(this,"fail",[],block.$to_proc())},TMP_Promise_fail$B_25.$$arity=0),Opal.alias(self,"rescue","fail"),Opal.alias(self,"catch","fail"),Opal.alias(self,"rescue!","fail!"),Opal.alias(self,"catch!","fail!"),Opal.defn(self,"$always",TMP_Promise_always_26=function(){var $iter=TMP_Promise_always_26.$$p,block=$iter||nil;return $iter&&(TMP_Promise_always_26.$$p=null),this["$^"](Opal.const_get_relative($nesting,"Promise").$new($hash2(["always"],{always:block})))},TMP_Promise_always_26.$$arity=0),Opal.defn(self,"$always!",TMP_Promise_always$B_27=function(){var $iter=TMP_Promise_always$B_27.$$p,block=$iter||nil;return $iter&&(TMP_Promise_always$B_27.$$p=null),this["$there_can_be_only_one!"](),$send(this,"always",[],block.$to_proc())},TMP_Promise_always$B_27.$$arity=0),Opal.alias(self,"finally","always"),Opal.alias(self,"ensure","always"),Opal.alias(self,"finally!","always!"),Opal.alias(self,"ensure!","always!"),Opal.defn(self,"$trace",TMP_Promise_trace_28=function(depth){var $iter=TMP_Promise_trace_28.$$p,block=$iter||nil;return null==depth&&(depth=nil),$iter&&(TMP_Promise_trace_28.$$p=null),this["$^"](Opal.const_get_relative($nesting,"Trace").$new(depth,block))},TMP_Promise_trace_28.$$arity=-1),Opal.defn(self,"$trace!",TMP_Promise_trace$B_29=function($a_rest){var args,$iter=TMP_Promise_trace$B_29.$$p,block=$iter||nil,$args_len=arguments.length,$rest_len=$args_len-0;$rest_len<0&&($rest_len=0),args=new Array($rest_len);for(var $arg_idx=0;$arg_idx<$args_len;$arg_idx++)args[$arg_idx-0]=arguments[$arg_idx];return $iter&&(TMP_Promise_trace$B_29.$$p=null),this["$there_can_be_only_one!"](),$send(this,"trace",Opal.to_a(args),block.$to_proc())},TMP_Promise_trace$B_29.$$arity=-1),Opal.defn(self,"$there_can_be_only_one!",TMP_Promise_there_can_be_only_one$B_30=function(){return $truthy(this.next["$any?"]())?this.$raise(Opal.const_get_relative($nesting,"ArgumentError"),"a promise has already been chained"):nil},TMP_Promise_there_can_be_only_one$B_30.$$arity=0),Opal.defn(self,"$inspect",TMP_Promise_inspect_31=function(){var $a,result=nil;return result="#<"+this.$class()+"("+this.$object_id()+")",$truthy(this.next["$any?"]())&&(result=$rb_plus(result," >> "+this.next.$inspect())),result=$truthy(this["$realized?"]())?$rb_plus(result,": "+($truthy($a=this.value)?$a:this.error).$inspect()+">"):$rb_plus(result,">")},TMP_Promise_inspect_31.$$arity=0),function($base,$super,$parent_nesting){function $Trace(){}var TMP_Trace_it_32,TMP_Trace_initialize_33,self=$Trace=$klass($base,$super,"Trace",$Trace),$nesting=(self.$$proto,[self].concat($parent_nesting));Opal.defs(self,"$it",TMP_Trace_it_32=function(promise){var $a,prev,current=nil;return current=[],$truthy($truthy($a=promise["$act?"]())?$a:promise.$prev()["$nil?"]())&&current.$push(promise.$value()),$truthy(prev=promise.$prev())?current.$concat(this.$it(prev)):current},TMP_Trace_it_32.$$arity=1),Opal.defn(self,"$initialize",TMP_Trace_initialize_33=function(depth,block){var TMP_34,$iter=TMP_Trace_initialize_33.$$p;return $iter&&(TMP_Trace_initialize_33.$$p=null),this.depth=depth,$send(this,Opal.find_super_dispatcher(this,"initialize",TMP_Trace_initialize_33,!1),[$hash2(["success"],{success:$send(this,"proc",[],(TMP_34=function(){var $a,lhs,rhs,self=TMP_34.$$s||this,trace=nil;return(trace=Opal.const_get_relative($nesting,"Trace").$it(self).$reverse()).$pop(),$truthy($truthy($a=depth)?(lhs=depth,rhs=trace.$length(),"number"==typeof lhs&&"number"==typeof rhs?lhs<=rhs:lhs["$<="](rhs)):$a)&&trace.$shift(function(lhs,rhs){return"number"==typeof lhs&&"number"==typeof rhs?lhs-rhs:lhs["$-"](rhs)}(trace.$length(),depth)),$send(block,"call",Opal.to_a(trace))},TMP_34.$$s=this,TMP_34.$$arity=0,TMP_34))})],null)},TMP_Trace_initialize_33.$$arity=2)}($nesting[0],self,$nesting),function($base,$super,$parent_nesting){function $When(){}var TMP_When_initialize_35,TMP_When_each_37,TMP_When_collect_39,TMP_When_inject_41,TMP_When_wait_44,TMP_When_$gt$gt_45,TMP_When_try_47,self=$When=$klass($base,$super,"When",$When),def=self.$$proto,$nesting=[self].concat($parent_nesting);return def.wait=nil,Opal.defn(self,"$initialize",TMP_When_initialize_35=function(promises){var TMP_36,$iter=TMP_When_initialize_35.$$p;return null==promises&&(promises=[]),$iter&&(TMP_When_initialize_35.$$p=null),$send(this,Opal.find_super_dispatcher(this,"initialize",TMP_When_initialize_35,!1),[],null),this.wait=[],$send(promises,"each",[],((TMP_36=function(promise){var self=TMP_36.$$s||this;return null==promise&&(promise=nil),self.$wait(promise)}).$$s=this,TMP_36.$$arity=1,TMP_36))},TMP_When_initialize_35.$$arity=-1),Opal.defn(self,"$each",TMP_When_each_37=function(){var TMP_38,$iter=TMP_When_each_37.$$p,block=$iter||nil;return $iter&&(TMP_When_each_37.$$p=null),$truthy(block)||this.$raise(Opal.const_get_relative($nesting,"ArgumentError"),"no block given"),$send(this,"then",[],((TMP_38=function(values){TMP_38.$$s;return null==values&&(values=nil),$send(values,"each",[],block.$to_proc())}).$$s=this,TMP_38.$$arity=1,TMP_38))},TMP_When_each_37.$$arity=0),Opal.defn(self,"$collect",TMP_When_collect_39=function(){var TMP_40,$iter=TMP_When_collect_39.$$p,block=$iter||nil;return $iter&&(TMP_When_collect_39.$$p=null),$truthy(block)||this.$raise(Opal.const_get_relative($nesting,"ArgumentError"),"no block given"),$send(this,"then",[],((TMP_40=function(values){TMP_40.$$s;return null==values&&(values=nil),Opal.const_get_relative($nesting,"When").$new($send(values,"map",[],block.$to_proc()))}).$$s=this,TMP_40.$$arity=1,TMP_40))},TMP_When_collect_39.$$arity=0),Opal.defn(self,"$inject",TMP_When_inject_41=function($a_rest){var TMP_42,args,$iter=TMP_When_inject_41.$$p,block=$iter||nil,$args_len=arguments.length,$rest_len=$args_len-0;$rest_len<0&&($rest_len=0),args=new Array($rest_len);for(var $arg_idx=0;$arg_idx<$args_len;$arg_idx++)args[$arg_idx-0]=arguments[$arg_idx];return $iter&&(TMP_When_inject_41.$$p=null),$send(this,"then",[],((TMP_42=function(values){TMP_42.$$s;return null==values&&(values=nil),$send(values,"reduce",Opal.to_a(args),block.$to_proc())}).$$s=this,TMP_42.$$arity=1,TMP_42))},TMP_When_inject_41.$$arity=-1),Opal.alias(self,"map","collect"),Opal.alias(self,"reduce","inject"),Opal.defn(self,"$wait",TMP_When_wait_44=function(promise){var TMP_43;return $truthy(Opal.const_get_relative($nesting,"Promise")["$==="](promise))||(promise=Opal.const_get_relative($nesting,"Promise").$value(promise)),$truthy(promise["$act?"]())&&(promise=promise.$then()),this.wait["$<<"](promise),$send(promise,"always",[],((TMP_43=function(){var self=TMP_43.$$s||this;return null==self.next&&(self.next=nil),$truthy(self.next["$any?"]())?self.$try():nil}).$$s=this,TMP_43.$$arity=0,TMP_43)),this},TMP_When_wait_44.$$arity=1),Opal.alias(self,"and","wait"),Opal.defn(self,"$>>",TMP_When_$gt$gt_45=function($a_rest){var TMP_46,$zuper_ii,$iter=TMP_When_$gt$gt_45.$$p,$zuper=nil,$zuper_i=nil;for($iter&&(TMP_When_$gt$gt_45.$$p=null),$zuper_i=0,$zuper_ii=arguments.length,$zuper=new Array($zuper_ii);$zuper_i<$zuper_ii;$zuper_i++)$zuper[$zuper_i]=arguments[$zuper_i];return $send($send(this,Opal.find_super_dispatcher(this,">>",TMP_When_$gt$gt_45,!1),$zuper,$iter),"tap",[],((TMP_46=function(){return(TMP_46.$$s||this).$try()}).$$s=this,TMP_46.$$arity=0,TMP_46))},TMP_When_$gt$gt_45.$$arity=-1),Opal.defn(self,"$try",TMP_When_try_47=function(){var promise=nil;return $truthy($send(this.wait,"all?",[],"realized?".$to_proc()))?$truthy(promise=$send(this.wait,"find",[],"rejected?".$to_proc()))?this.$reject(promise.$error()):this.$resolve($send(this.wait,"map",[],"value".$to_proc())):nil},TMP_When_try_47.$$arity=0),nil&&"try"}($nesting[0],self,$nesting)}($nesting[0],0,$nesting)};
