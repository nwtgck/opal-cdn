Opal.modules.js=function(Opal){Opal.top;var $nesting=[],nil=Opal.nil,$module=(Opal.const_get_qualified,Opal.const_get_relative,Opal.breaker,Opal.slice,Opal.module),$truthy=Opal.truthy;return Opal.add_stubs(["$insert","$<<","$global","$extend"]),function($base,$parent_nesting){function $JS(){}var TMP_JS_delete_1,TMP_JS_global_2,TMP_JS_in_3,TMP_JS_instanceof_4,TMP_JS_new_5,TMP_JS_new_6,TMP_JS_typeof_7,TMP_JS_void_8,TMP_JS_call_9,self=$JS=$module($base,"JS",$JS);self.prototype,[self].concat($parent_nesting);Opal.def(self,"$delete",TMP_JS_delete_1=function(object,property){return delete object[property]},TMP_JS_delete_1.$$arity=2),Opal.def(self,"$global",TMP_JS_global_2=function(){return Opal.global},TMP_JS_global_2.$$arity=0),Opal.def(self,"$in",TMP_JS_in_3=function(property,object){return property in object},TMP_JS_in_3.$$arity=2),Opal.def(self,"$instanceof",TMP_JS_instanceof_4=function(value,func){return value instanceof func},TMP_JS_instanceof_4.$$arity=2),$truthy("function"==typeof Function.prototype.bind)?Opal.def(self,"$new",TMP_JS_new_5=function(func,$a){var args,$iter=TMP_JS_new_5.$$p,block=$iter||nil;return $iter&&(TMP_JS_new_5.$$p=null),$iter&&(TMP_JS_new_5.$$p=null),(args=Opal.slice.call(arguments,1,arguments.length)).$insert(0,this),$truthy(block)&&args["$<<"](block),new(func.bind.apply(func,args))},TMP_JS_new_5.$$arity=-2):Opal.def(self,"$new",TMP_JS_new_6=function(func,$a){var $post_args,args,f,$iter=TMP_JS_new_6.$$p,block=$iter||nil;return $iter&&(TMP_JS_new_6.$$p=null),$iter&&(TMP_JS_new_6.$$p=null),$post_args=Opal.slice.call(arguments,1,arguments.length),args=$post_args,$truthy(block)&&args["$<<"](block),(f=function(){return func.apply(this,args)}).prototype=func.prototype,new f},TMP_JS_new_6.$$arity=-2),Opal.def(self,"$typeof",TMP_JS_typeof_7=function(value){return typeof value},TMP_JS_typeof_7.$$arity=1),Opal.def(self,"$void",TMP_JS_void_8=function(expr){},TMP_JS_void_8.$$arity=1),Opal.def(self,"$call",TMP_JS_call_9=function(func,$a){var args,$iter=TMP_JS_call_9.$$p,block=$iter||nil,g=nil;return $iter&&(TMP_JS_call_9.$$p=null),$iter&&(TMP_JS_call_9.$$p=null),args=Opal.slice.call(arguments,1,arguments.length),g=this.$global(),$truthy(block)&&args["$<<"](block),g[func].apply(g,args)},TMP_JS_call_9.$$arity=-2),Opal.alias(self,"method_missing","call"),self.$extend(self)}($nesting[0],$nesting)};
