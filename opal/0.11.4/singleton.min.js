Opal.modules.singleton=function(Opal){Opal.top;var $nesting=[],nil=Opal.nil,$module=(Opal.breaker,Opal.slice,Opal.module),$send=Opal.send,$truthy=Opal.truthy;return Opal.add_stubs(["$raise","$class","$__init__","$instance_eval","$new","$extend"]),function($base,$parent_nesting){var TMP_Singleton_clone_1,TMP_Singleton_dup_2,self=$module($base,"Singleton"),$nesting=(self.$$proto,[self].concat($parent_nesting));Opal.defn(self,"$clone",TMP_Singleton_clone_1=function(){return this.$raise(Opal.const_get_relative($nesting,"TypeError"),"can't clone instance of singleton "+this.$class())},TMP_Singleton_clone_1.$$arity=0),Opal.defn(self,"$dup",TMP_Singleton_dup_2=function(){return this.$raise(Opal.const_get_relative($nesting,"TypeError"),"can't dup instance of singleton "+this.$class())},TMP_Singleton_dup_2.$$arity=0),function($base,$parent_nesting){var TMP_SingletonClassMethods_clone_3,TMP_SingletonClassMethods_inherited_4,self=$module($base,"SingletonClassMethods"),$nesting=(self.$$proto,[self].concat($parent_nesting));Opal.defn(self,"$clone",TMP_SingletonClassMethods_clone_3=function(){var $zuper_ii,$iter=TMP_SingletonClassMethods_clone_3.$$p,$zuper=nil,$zuper_i=nil;for($iter&&(TMP_SingletonClassMethods_clone_3.$$p=null),$zuper_i=0,$zuper_ii=arguments.length,$zuper=new Array($zuper_ii);$zuper_i<$zuper_ii;$zuper_i++)$zuper[$zuper_i]=arguments[$zuper_i];return Opal.const_get_relative($nesting,"Singleton").$__init__($send(this,Opal.find_super_dispatcher(this,"clone",TMP_SingletonClassMethods_clone_3,!1),$zuper,$iter))},TMP_SingletonClassMethods_clone_3.$$arity=0),Opal.defn(self,"$inherited",TMP_SingletonClassMethods_inherited_4=function(sub_klass){var $zuper_ii,$iter=TMP_SingletonClassMethods_inherited_4.$$p,$zuper=nil,$zuper_i=nil;for($iter&&(TMP_SingletonClassMethods_inherited_4.$$p=null),$zuper_i=0,$zuper_ii=arguments.length,$zuper=new Array($zuper_ii);$zuper_i<$zuper_ii;$zuper_i++)$zuper[$zuper_i]=arguments[$zuper_i];return $send(this,Opal.find_super_dispatcher(this,"inherited",TMP_SingletonClassMethods_inherited_4,!1),$zuper,$iter),Opal.const_get_relative($nesting,"Singleton").$__init__(sub_klass)},TMP_SingletonClassMethods_inherited_4.$$arity=1)}($nesting[0],$nesting),function(self,$parent_nesting){self.$$proto;var TMP___init___7,TMP_included_8,$nesting=[self].concat($parent_nesting);Opal.defn(self,"$__init__",TMP___init___7=function(klass){var TMP_5,TMP_instance_6;return $send(klass,"instance_eval",[],((TMP_5=function(){return(TMP_5.$$s||this).singleton__instance__=nil}).$$s=this,TMP_5.$$arity=0,TMP_5)),Opal.defs(klass,"$instance",TMP_instance_6=function(){return null==this.singleton__instance__&&(this.singleton__instance__=nil),$truthy(this.singleton__instance__)?this.singleton__instance__:this.singleton__instance__=this.$new()},TMP_instance_6.$$arity=0),klass},TMP___init___7.$$arity=1),Opal.defn(self,"$included",TMP_included_8=function(klass){var $zuper_ii,$iter=TMP_included_8.$$p,$zuper=nil,$zuper_i=nil;for($iter&&(TMP_included_8.$$p=null),$zuper_i=0,$zuper_ii=arguments.length,$zuper=new Array($zuper_ii);$zuper_i<$zuper_ii;$zuper_i++)$zuper[$zuper_i]=arguments[$zuper_i];return $send(this,Opal.find_super_dispatcher(this,"included",TMP_included_8,!1),$zuper,$iter),klass.$extend(Opal.const_get_relative($nesting,"SingletonClassMethods")),Opal.const_get_relative($nesting,"Singleton").$__init__(klass)},TMP_included_8.$$arity=1)}(Opal.get_singleton_class(Opal.const_get_relative($nesting,"Singleton")),$nesting)}($nesting[0],$nesting)};
